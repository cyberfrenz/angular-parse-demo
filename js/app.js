/*
    app.js
    code for our demo application
 */

"use strict";

//this is the base URL for all task objects managed by your application
//requesting this with a GET will get all tasks objects
//sending a POST to this will insert a new task object
//sending a PUT to this URL + '/' + task.objectId will update an existing task
//sending a DELETE to this URL + '/' + task.objectId will delete an existing task
var tasksUrl = 'https://api.parse.com/1/classes/tasks';

angular.module('ToDoApp', [])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'NyKh1OboPEb66m3lGXAc7FxEKRLaCWlM9MpEiCRB';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = '5v9xuKjlgh4VEcMky470w5R0NvvzRbI3S7dM97Xb';
    })

    .controller('TasksController', function($scope, $http) {
        $scope.refreshTasks = function() {
            $scope.loading = true;
            $http.get('https://api.parse.com/1/classes/tasks/' + '?where={"done" : false}')
                .success(function(responseData) {
                    // when returning a list of data, parse will return an obnect with property called results
                    // which contains an array of all the data objects
                    $scope.tasks = responseData.results;
                })
                .error(function(err) {
                    console.log(err);
                })
                .finally(function(){
                    $scope.loading=false;
                });

        };

         $scope.refreshTasks();

         $scope.newTask = { done: false};

         $scope.addTask = function(task) {
            // Post will add a new item to the class
            $http.post('https://api.parse.com/1/classes/tasks', task) 
                .success(function(responseData) {
                    //Parse will return the new objectId in the response data 

                    task.objectId = responseData.objectId;

                    //add that task to our task list
                    $scope.tasks.push(task);

                    //reset the newTask to clear the form

                    $scope.newTask = {done: false};
                })
         };

        //function to update an existing task
        $scope.updateTask = function(task) {
            $scope.updating = true;
            $http.put('https://api.parse.com/1/classes/tasks/' + task.objectId, task)
                .success(function(responseData) {
                    // do nothing
                })
                .error(function(err) {
                    console.log(err);
                })
                .finally(function() {
                    $scope.updating = false;
                });

        };

    });
